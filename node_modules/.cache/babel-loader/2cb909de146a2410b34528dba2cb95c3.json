{"remainingRequest":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js!/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/mixins/activatable/index.js","dependencies":[{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/mixins/activatable/index.js","mtime":1571087452256},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/cache-loader/dist/cjs.js","mtime":1566420493308},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js","mtime":1566420490291}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n// Mixins\nimport Delayable from \"../delayable\";\nimport Toggleable from \"../toggleable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nimport { getSlot, getSlotType } from \"../../util/helpers\";\nimport { consoleError } from \"../../util/console\";\nvar baseMixins = mixins(Delayable, Toggleable);\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'activatable',\n  props: {\n    activator: {\n      default: null,\n      validator: function validator(val) {\n        return ['string', 'object'].includes(_typeof(val));\n      }\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean\n  },\n  data: function data() {\n    return {\n      // Do not use this directly, call getActivator() instead\n      activatorElement: null,\n      activatorNode: [],\n      events: ['click', 'mouseenter', 'mouseleave'],\n      listeners: {}\n    };\n  },\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator'\n  },\n  mounted: function mounted() {\n    var slotType = getSlotType(this, 'activator', true);\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(\"The activator slot must be bound, try '<template v-slot:activator=\\\"{ on }\\\"><v-btn v-on=\\\"on\\\">'\", this);\n    }\n\n    this.addActivatorEvents();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.removeActivatorEvents();\n  },\n  methods: {\n    addActivatorEvents: function addActivatorEvents() {\n      if (!this.activator || this.disabled || !this.getActivator()) return;\n      this.listeners = this.genActivatorListeners();\n      var keys = Object.keys(this.listeners);\n\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var key = _keys[_i];\n        this.getActivator().addEventListener(key, this.listeners[key]);\n      }\n    },\n    genActivator: function genActivator() {\n      var node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes()\n      })) || [];\n      this.activatorNode = node;\n      return node;\n    },\n    genActivatorAttributes: function genActivatorAttributes() {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive)\n      };\n    },\n    genActivatorListeners: function genActivatorListeners() {\n      var _this = this;\n\n      if (this.disabled) return {};\n      var listeners = {};\n\n      if (this.openOnHover) {\n        listeners.mouseenter = function (e) {\n          _this.getActivator(e);\n\n          _this.runDelay('open');\n        };\n\n        listeners.mouseleave = function (e) {\n          _this.getActivator(e);\n\n          _this.runDelay('close');\n        };\n      } else {\n        listeners.click = function (e) {\n          var activator = _this.getActivator(e);\n\n          if (activator) activator.focus();\n          _this.isActive = !_this.isActive;\n        };\n      }\n\n      return listeners;\n    },\n    getActivator: function getActivator(e) {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement;\n      var activator = null;\n\n      if (this.activator) {\n        var target = this.internalActivator ? this.$el : document;\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator);\n        } else if (this.activator.$el) {\n          // Component (ref)\n          activator = this.activator.$el;\n        } else {\n          // HTMLElement | Element\n          activator = this.activator;\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = e.currentTarget || e.target;\n      } else if (this.activatorNode.length) {\n        // Last resort, use the contents of the activator slot\n        var vm = this.activatorNode[0].componentInstance;\n\n        if (vm && vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n        vm.$options.mixins.some(function (m) {\n          return m.options && ['activatable', 'menuable'].includes(m.options.name);\n        })) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = vm.getActivator();\n        } else {\n          activator = this.activatorNode[0].elm;\n        }\n      }\n\n      this.activatorElement = activator;\n      return this.activatorElement;\n    },\n    getContentSlot: function getContentSlot() {\n      return getSlot(this, 'default', this.getValueProxy(), true);\n    },\n    getValueProxy: function getValueProxy() {\n      var self = this;\n      return {\n        get value() {\n          return self.isActive;\n        },\n\n        set value(isActive) {\n          self.isActive = isActive;\n        }\n\n      };\n    },\n    removeActivatorEvents: function removeActivatorEvents() {\n      if (!this.activator || !this.activatorElement) return;\n      var keys = Object.keys(this.listeners);\n\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var key = _keys2[_i2];\n        this.activatorElement.removeEventListener(key, this.listeners[key]);\n      }\n\n      this.listeners = {};\n    },\n    resetActivator: function resetActivator() {\n      this.activatorElement = null;\n      this.getActivator();\n      this.addActivatorEvents();\n    }\n  }\n});",{"version":3,"sources":["/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/mixins/activatable/index.js"],"names":["Delayable","Toggleable","mixins","getSlot","getSlotType","consoleError","baseMixins","extend","name","props","activator","default","validator","val","includes","disabled","Boolean","internalActivator","openOnHover","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","addActivatorEvents","beforeDestroy","removeActivatorEvents","methods","getActivator","genActivatorListeners","keys","Object","key","addEventListener","genActivator","node","assign","getValueProxy","on","attrs","genActivatorAttributes","role","String","isActive","mouseenter","e","runDelay","mouseleave","click","focus","target","$el","document","querySelector","currentTarget","length","vm","componentInstance","$options","some","m","options","elm","getContentSlot","self","value","removeEventListener","resetActivator"],"mappings":"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","sourcesContent":["// Mixins\nimport Delayable from '../delayable';\nimport Toggleable from '../toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { getSlot, getSlotType } from '../../util/helpers';\nimport { consoleError } from '../../util/console';\nconst baseMixins = mixins(Delayable, Toggleable);\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'activatable',\n  props: {\n    activator: {\n      default: null,\n      validator: val => {\n        return ['string', 'object'].includes(typeof val);\n      }\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean\n  },\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null,\n    activatorNode: [],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {}\n  }),\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator'\n  },\n\n  mounted() {\n    const slotType = getSlotType(this, 'activator', true);\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this);\n    }\n\n    this.addActivatorEvents();\n  },\n\n  beforeDestroy() {\n    this.removeActivatorEvents();\n  },\n\n  methods: {\n    addActivatorEvents() {\n      if (!this.activator || this.disabled || !this.getActivator()) return;\n      this.listeners = this.genActivatorListeners();\n      const keys = Object.keys(this.listeners);\n\n      for (const key of keys) {\n        this.getActivator().addEventListener(key, this.listeners[key]);\n      }\n    },\n\n    genActivator() {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes()\n      })) || [];\n      this.activatorNode = node;\n      return node;\n    },\n\n    genActivatorAttributes() {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive)\n      };\n    },\n\n    genActivatorListeners() {\n      if (this.disabled) return {};\n      const listeners = {};\n\n      if (this.openOnHover) {\n        listeners.mouseenter = e => {\n          this.getActivator(e);\n          this.runDelay('open');\n        };\n\n        listeners.mouseleave = e => {\n          this.getActivator(e);\n          this.runDelay('close');\n        };\n      } else {\n        listeners.click = e => {\n          const activator = this.getActivator(e);\n          if (activator) activator.focus();\n          this.isActive = !this.isActive;\n        };\n      }\n\n      return listeners;\n    },\n\n    getActivator(e) {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement;\n      let activator = null;\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document;\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator);\n        } else if (this.activator.$el) {\n          // Component (ref)\n          activator = this.activator.$el;\n        } else {\n          // HTMLElement | Element\n          activator = this.activator;\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = e.currentTarget || e.target;\n      } else if (this.activatorNode.length) {\n        // Last resort, use the contents of the activator slot\n        const vm = this.activatorNode[0].componentInstance;\n\n        if (vm && vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n        vm.$options.mixins.some(m => m.options && ['activatable', 'menuable'].includes(m.options.name))) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = vm.getActivator();\n        } else {\n          activator = this.activatorNode[0].elm;\n        }\n      }\n\n      this.activatorElement = activator;\n      return this.activatorElement;\n    },\n\n    getContentSlot() {\n      return getSlot(this, 'default', this.getValueProxy(), true);\n    },\n\n    getValueProxy() {\n      const self = this;\n      return {\n        get value() {\n          return self.isActive;\n        },\n\n        set value(isActive) {\n          self.isActive = isActive;\n        }\n\n      };\n    },\n\n    removeActivatorEvents() {\n      if (!this.activator || !this.activatorElement) return;\n      const keys = Object.keys(this.listeners);\n\n      for (const key of keys) {\n        this.activatorElement.removeEventListener(key, this.listeners[key]);\n      }\n\n      this.listeners = {};\n    },\n\n    resetActivator() {\n      this.activatorElement = null;\n      this.getActivator();\n      this.addActivatorEvents();\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}