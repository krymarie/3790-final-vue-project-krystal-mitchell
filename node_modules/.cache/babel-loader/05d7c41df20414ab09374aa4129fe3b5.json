{"remainingRequest":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js!/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js","dependencies":[{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js","mtime":1571087452256},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/cache-loader/dist/cjs.js","mtime":1566420493308},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js","mtime":1566420490291}],"contextDependencies":[],"result":["import { VExpandTransition } from \"../transitions\"; // Mixins\n\nimport Bootable from \"../../mixins/bootable\";\nimport { inject as RegistrableInject } from \"../../mixins/registrable\"; // Utilities\n\nimport { getSlot } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Bootable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  computed: {\n    isActive: function isActive() {\n      return this.expansionPanel.isActive;\n    }\n  },\n  created: function created() {\n    this.expansionPanel.registerContent(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n  render: function render(h) {\n    return h(VExpandTransition, [h('div', {\n      staticClass: 'v-expansion-panel-content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }, this.showLazyContent([h('div', {\n      class: 'v-expansion-panel-content__wrap'\n    }, getSlot(this))]))]);\n  }\n});",{"version":3,"sources":["/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js"],"names":["VExpandTransition","Bootable","inject","RegistrableInject","getSlot","mixins","baseMixins","extend","name","computed","isActive","expansionPanel","created","registerContent","beforeDestroy","unregisterContent","render","h","staticClass","directives","value","showLazyContent","class"],"mappings":"AAAA,SAASA,iBAAT,yB,CAAoD;;AAEpD,OAAOC,QAAP;AACA,SAASC,MAAM,IAAIC,iBAAnB,mC,CAAwE;;AAExE,SAASC,OAAT;AACA,OAAOC,MAAP;AACA,IAAMC,UAAU,GAAGD,MAAM,CAACJ,QAAD,EAAWE,iBAAiB,CAAC,gBAAD,EAAmB,2BAAnB,EAAgD,mBAAhD,CAA5B,CAAzB;AACA;;AAEA,eAAeG,UAAU,CAACC,MAAX,GAAoBA,MAApB,CAA2B;AACxCC,EAAAA,IAAI,EAAE,2BADkC;AAExCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,sBACG;AACT,aAAO,KAAKC,cAAL,CAAoBD,QAA3B;AACD;AAHO,GAF8B;AASxCE,EAAAA,OATwC,qBAS9B;AACR,SAAKD,cAAL,CAAoBE,eAApB,CAAoC,IAApC;AACD,GAXuC;AAaxCC,EAAAA,aAbwC,2BAaxB;AACd,SAAKH,cAAL,CAAoBI,iBAApB;AACD,GAfuC;AAiBxCC,EAAAA,MAjBwC,kBAiBjCC,CAjBiC,EAiB9B;AACR,WAAOA,CAAC,CAACjB,iBAAD,EAAoB,CAACiB,CAAC,CAAC,KAAD,EAAQ;AACpCC,MAAAA,WAAW,EAAE,2BADuB;AAEpCC,MAAAA,UAAU,EAAE,CAAC;AACXX,QAAAA,IAAI,EAAE,MADK;AAEXY,QAAAA,KAAK,EAAE,KAAKV;AAFD,OAAD;AAFwB,KAAR,EAM3B,KAAKW,eAAL,CAAqB,CAACJ,CAAC,CAAC,KAAD,EAAQ;AAChCK,MAAAA,KAAK,EAAE;AADyB,KAAR,EAEvBlB,OAAO,CAAC,IAAD,CAFgB,CAAF,CAArB,CAN2B,CAAF,CAApB,CAAR;AASD;AA3BuC,CAA3B,CAAf","sourcesContent":["import { VExpandTransition } from '../transitions'; // Mixins\n\nimport Bootable from '../../mixins/bootable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  computed: {\n    isActive() {\n      return this.expansionPanel.isActive;\n    }\n\n  },\n\n  created() {\n    this.expansionPanel.registerContent(this);\n  },\n\n  beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n\n  render(h) {\n    return h(VExpandTransition, [h('div', {\n      staticClass: 'v-expansion-panel-content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }, this.showLazyContent([h('div', {\n      class: 'v-expansion-panel-content__wrap'\n    }, getSlot(this))]))]);\n  }\n\n});\n//# sourceMappingURL=VExpansionPanelContent.js.map"]}]}