{"remainingRequest":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js!/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VCalendar/util/events.js","dependencies":[{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VCalendar/util/events.js","mtime":1571087452256},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/cache-loader/dist/cjs.js","mtime":1566420493308},{"path":"/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/babel-loader/lib/index.js","mtime":1566420490291}],"contextDependencies":[],"result":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier } from \"./timestamp\";\nexport function parseEvent(input, index, startProperty, endProperty) {\n  if (!(startProperty in input)) {\n    throw new Error('The ' + startProperty + ' property is required on all events to be a valid timestamp in the format YYYY-MM-DD or YYYY-MM-DD hh:mm');\n  }\n\n  var start = parseTimestamp(input[startProperty]);\n  var end = input[endProperty] ? parseTimestamp(input[endProperty]) : start;\n  var startIdentifier = getDayIdentifier(start);\n  var startTimestampIdentifier = getTimestampIdentifier(start);\n  var endIdentifier = getDayIdentifier(end);\n  var endTimestampIdentifier = getTimestampIdentifier(end);\n  var allDay = !start.hasTime;\n  return {\n    input: input,\n    start: start,\n    startIdentifier: startIdentifier,\n    startTimestampIdentifier: startTimestampIdentifier,\n    end: end,\n    endIdentifier: endIdentifier,\n    endTimestampIdentifier: endTimestampIdentifier,\n    allDay: allDay,\n    index: index\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier;\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}",{"version":3,"sources":["/Users/krystalmarie/Desktop/Thor/projects/3790-final-vue-project-krystal-mitchell/node_modules/vuetify/lib/components/VCalendar/util/events.js"],"names":["parseTimestamp","getDayIdentifier","getTimestampIdentifier","parseEvent","input","index","startProperty","endProperty","Error","start","end","startIdentifier","startTimestampIdentifier","endIdentifier","endTimestampIdentifier","allDay","hasTime","isEventOn","event","dayIdentifier","isEventOverlapping"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,sBAA3C;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA8D;AACnE,MAAI,EAAED,aAAa,IAAIF,KAAnB,CAAJ,EAA+B;AAC7B,UAAM,IAAII,KAAJ,CAAU,SAASF,aAAT,GAAyB,0GAAnC,CAAN;AACD;;AAED,MAAMG,KAAK,GAAGT,cAAc,CAACI,KAAK,CAACE,aAAD,CAAN,CAA5B;AACA,MAAMI,GAAG,GAAGN,KAAK,CAACG,WAAD,CAAL,GAAqBP,cAAc,CAACI,KAAK,CAACG,WAAD,CAAN,CAAnC,GAA0DE,KAAtE;AACA,MAAME,eAAe,GAAGV,gBAAgB,CAACQ,KAAD,CAAxC;AACA,MAAMG,wBAAwB,GAAGV,sBAAsB,CAACO,KAAD,CAAvD;AACA,MAAMI,aAAa,GAAGZ,gBAAgB,CAACS,GAAD,CAAtC;AACA,MAAMI,sBAAsB,GAAGZ,sBAAsB,CAACQ,GAAD,CAArD;AACA,MAAMK,MAAM,GAAG,CAACN,KAAK,CAACO,OAAtB;AACA,SAAO;AACLZ,IAAAA,KAAK,EAALA,KADK;AAELK,IAAAA,KAAK,EAALA,KAFK;AAGLE,IAAAA,eAAe,EAAfA,eAHK;AAILC,IAAAA,wBAAwB,EAAxBA,wBAJK;AAKLF,IAAAA,GAAG,EAAHA,GALK;AAMLG,IAAAA,aAAa,EAAbA,aANK;AAOLC,IAAAA,sBAAsB,EAAtBA,sBAPK;AAQLC,IAAAA,MAAM,EAANA,MARK;AASLV,IAAAA,KAAK,EAALA;AATK,GAAP;AAWD;AACD,OAAO,SAASY,SAAT,CAAmBC,KAAnB,EAA0BC,aAA1B,EAAyC;AAC9C,SAAOA,aAAa,IAAID,KAAK,CAACP,eAAvB,IAA0CQ,aAAa,IAAID,KAAK,CAACL,aAAxE;AACD;AACD,OAAO,SAASO,kBAAT,CAA4BF,KAA5B,EAAmCP,eAAnC,EAAoDE,aAApD,EAAmE;AACxE,SAAOF,eAAe,IAAIO,KAAK,CAACL,aAAzB,IAA0CA,aAAa,IAAIK,KAAK,CAACP,eAAxE;AACD","sourcesContent":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier } from './timestamp';\nexport function parseEvent(input, index, startProperty, endProperty) {\n  if (!(startProperty in input)) {\n    throw new Error('The ' + startProperty + ' property is required on all events to be a valid timestamp in the format YYYY-MM-DD or YYYY-MM-DD hh:mm');\n  }\n\n  const start = parseTimestamp(input[startProperty]);\n  const end = input[endProperty] ? parseTimestamp(input[endProperty]) : start;\n  const startIdentifier = getDayIdentifier(start);\n  const startTimestampIdentifier = getTimestampIdentifier(start);\n  const endIdentifier = getDayIdentifier(end);\n  const endTimestampIdentifier = getTimestampIdentifier(end);\n  const allDay = !start.hasTime;\n  return {\n    input,\n    start,\n    startIdentifier,\n    startTimestampIdentifier,\n    end,\n    endIdentifier,\n    endTimestampIdentifier,\n    allDay,\n    index\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier;\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}\n//# sourceMappingURL=events.js.map"]}]}